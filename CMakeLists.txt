cmake_minimum_required(VERSION 3.10) 
SET(prjName numGame)
project(${prjName})
set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_HOME}/scripts/buildsystems/vcpkg.cmake")
# find_package(fmt CONFIG REQUIRED)
# find_path(RAPIDXML_INCLUDE_DIRS "rapidxml/rapidxml.hpp")
set(srcS)
set(rcS)
#file(GLOB srcS src/*.cpp)
#file(GLOB rcS src/*.rc)
set(osSrc)
if (UNIX)
    MESSAGE(STATUS "unix")
	add_definitions(-w)
elseif (WIN32)
    MESSAGE(STATUS "windows")
	ADD_DEFINITIONS(/Zi)
	ADD_DEFINITIONS(/utf-8)
	ADD_DEFINITIONS(/W1)
	
endif ()

# include_directories()

add_executable (ac src/ac.cpp)
add_executable (ah src/ah.cpp)
add_executable (cc src/cc.cpp)
add_executable (ch src/ch.cpp)
add_executable (classFile src/classFile.cpp)
add_executable (dowhile src/dowhile.cpp)
add_executable (forV src/for.cpp)
add_executable (forI src/forI.cpp)
add_executable (func src/func.cpp)
add_executable (ifv src/if.cpp)
add_executable (ifelse src/ifelse.cpp)
add_executable (include src/include.cpp)
add_executable (sh src/sh.cpp)
add_executable (struct src/struct.cpp)
add_executable (while src/while.cpp)
add_executable (unique_ptr src/unique_ptr.cpp)
add_executable (shared_ptr src/shared_ptr.cpp)
add_executable (make_unique src/make_unique.cpp)
add_executable (make_shared src/make_shared.cpp)
add_executable (convert src/convert.cpp)
# target_include_directories(${prjName} PRIVATE src)
# target_link_libraries(${prjName} PRIVATE  common cLog)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
		
